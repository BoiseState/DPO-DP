;symbolic execution tree
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Event))
(check-sat)
(push)
(assert (le x0 siena.Event))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Event)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Event)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Throwable))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Throwable)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Event))
(check-sat)
(push)
(assert (le x0 siena.Event))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Event)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Event)))
(check-sat)
(push)
(assert (le x0 siena.Event))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Event)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeValue))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeValue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.ByteBuf))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.ByteBuf)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Set))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Set)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Tokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Tokenizer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(push)
(assert (le x1 siena.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 siena.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(push)
(assert (le x0 siena.AttributeConstraint))
(check-sat)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 siena.AttributeConstraint)))
(check-sat)
(pop)
(pop)
