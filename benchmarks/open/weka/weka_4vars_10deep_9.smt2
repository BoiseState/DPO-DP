;symbolic execution tree
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierTree))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierTree)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.j48.C45PruneableClassifierTree))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.C45PruneableClassifierTree)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierTree))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierTree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.Remove))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.unsupervised.attribute.Remove)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.classifiers.Evaluation)))
(check-sat)
(push)
(assert (le x2 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Random))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Random)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x1 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x1 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.matrix.LUDecomposition))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.matrix.LUDecomposition)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.classifiers.trees.j48.ClassifierTree))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.classifiers.trees.j48.ClassifierTree)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.supervised.attribute.NominalToBinary))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.supervised.attribute.NominalToBinary)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.CapabilitiesHandler))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (not (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.supervised.attribute.NominalToBinary))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.supervised.attribute.NominalToBinary)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (not (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (not (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.PotentialClassIgnorer))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.filters.supervised.attribute.NominalToBinary))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.supervised.attribute.Discretize))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.ReplaceMissingValues))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.supervised.instance.StratifiedRemoveFolds))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.RemoveUseless))
(check-sat)
(pop)
(push)
(assert (le x1 weka.filters.supervised.instance.Resample))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.unsupervised.instance.RemoveFolds)))
(check-sat)
(push)
(assert (not (le x1 weka.filters.supervised.instance.Resample)))
(check-sat)
(push)
(assert (not (le x1 weka.filters.unsupervised.attribute.RemoveUseless)))
(check-sat)
(push)
(assert (not (le x1 weka.filters.supervised.instance.StratifiedRemoveFolds)))
(check-sat)
(push)
(assert (not (le x1 weka.filters.supervised.attribute.Discretize)))
(check-sat)
(push)
(assert (not (le x1 weka.filters.supervised.attribute.NominalToBinary)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.unsupervised.instance.RemoveFolds))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.filters.unsupervised.attribute.Remove))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.unsupervised.attribute.Remove)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x1 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Evaluation)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (= x1 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x1 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.core.Range))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Range)))
(check-sat)
(push)
(assert (le x1 weka.core.Range))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Range)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Range))
(check-sat)
(push)
(assert (le x0 weka.core.Range))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Range)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Range)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x2 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Double))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
