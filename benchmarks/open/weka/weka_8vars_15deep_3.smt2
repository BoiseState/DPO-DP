;symbolic execution tree
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (le x6 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.Classifier)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.classifiers.CostMatrix))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.CostMatrix)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.Classifier)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.OptionHandler))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.OptionHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Hashtable)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.RenderingHints))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Hashtable)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Hashtable)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.io.ByteArrayInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.ByteArrayInputStream)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.experiment.Stats))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 java.util.Hashtable))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 weka.experiment.Stats))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.experiment.Stats)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.experiment.Stats))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.experiment.Stats)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.experiment.Stats)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.experiment.Stats)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Hashtable))
(check-sat)
(push)
(assert (le x2 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.experiment.Stats)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Hashtable)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.experiment.Stats)))
(check-sat)
(push)
(assert (le x2 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.experiment.Stats)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Hashtable)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.filters.unsupervised.attribute.RemoveUseless))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.filters.unsupervised.attribute.RemoveUseless)))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x5 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x5 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Hashtable)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Integer))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Integer)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Integer)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (not (le x5 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x5 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (not (le x1 weka.estimators.NormalEstimator)))
(check-sat)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(push)
(assert (= x5 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x5 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.NormalEstimator))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.font.TextLayout))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.matrix.Matrix))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.matrix.IntVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.text.NumberFormat))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Hashtable))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.datatransfer.DataFlavor))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.ArrayList))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.matrix.DoubleVector))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.classifiers.evaluation.ThresholdCurve))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.evaluation.ThresholdCurve)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.geom.AffineTransform))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 javax.swing.AbstractAction))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.GridBagConstraints))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.text.DecimalFormatSymbols))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.LinkedList))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (= x2 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 java.io.InputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.InputStream)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x2 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x2 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x2 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x2 java.text.Format)))
(check-sat)
(push)
(assert (not (le x2 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x2 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x2 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x2 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (= x2 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x2 java.util.Date)))
(check-sat)
(push)
(assert (not (le x2 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x2 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x2 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (= x2 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x2 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x2 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x2 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (= x2 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x2 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x2 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x2 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x2 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x2 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x2 java.text.Format))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x2 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Enum))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.CostMatrix))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.CostMatrix)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.PrintStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.PrintStream)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x0 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.REPTree_currencysign_Tree))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.REPTree_currencysign_Tree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x5 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Range))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Range)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.ByteArrayOutputStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.ByteArrayOutputStream)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.ByteArrayOutputStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.ByteArrayOutputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (not (le x0 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.Reader))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.Reader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.PruneableClassifierTree))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.PruneableClassifierTree)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.io.ObjectInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.ObjectInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.ByteArrayInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.ByteArrayInputStream)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.filters.unsupervised.attribute.Remove))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.filters.unsupervised.attribute.Remove)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (not (le x4 weka.core.SerializedObject)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SerializedObject))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.ClassLoader))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 weka.classifiers.trees.m5.YongSplitInfo))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 weka.classifiers.trees.m5.YongSplitInfo))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.classifiers.trees.m5.YongSplitInfo)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 weka.classifiers.trees.m5.YongSplitInfo)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.ClassLoader)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x7 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Enum))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.text.DateFormat))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.print.Paper))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.datatransfer.DataFlavor))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 javax.swing.AbstractAction))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.AffineTransform))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x7 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.matrix.DoubleVector))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.text.Format))
(check-sat)
(push)
(assert (not (le x7 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x7 java.text.NumberFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.print.PageFormat))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.AbstractMap))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x7 java.awt.JobAttributes))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 sun.java2d.loops.FontInfo))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (= x7 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.GridBagConstraints))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x7 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x7 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x7 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x7 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x7 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x7 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x7 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x7 java.awt.print.Paper)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (not (le x7 java.lang.Enum)))
(check-sat)
(push)
(assert (not (= x7 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x7 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x7 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (= x7 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x7 java.text.Format)))
(check-sat)
(push)
(assert (not (le x7 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x7 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (= x7 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x7 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (= x7 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x7 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x7 java.util.Date)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.ArrayList))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.j48.C45Split))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.j48.C45Split))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.C45Split)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.j48.C45Split))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.C45Split)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.C45Split)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.SerializedObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.io.InputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.InputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x5 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Hashtable)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x5 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Range))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Range)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Range))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Range)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Integer)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Integer))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.JobAttributes))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x4 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.NumberFormat))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (= x4 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.util.Date)))
(check-sat)
(push)
(assert (not (le x4 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x4 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x4 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (not (le x4 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (= x4 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (= x4 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.Format)))
(check-sat)
(push)
(assert (not (= x4 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x4 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x4 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x4 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x4 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.Format))
(check-sat)
(push)
(assert (not (le x4 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.NumberFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.LinkedList))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.PrintStream))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.PrintStream)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x3 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.functions.LinearRegression)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.SerializedObject)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SerializedObject))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.text.Format)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x3 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x3 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x3 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (= x3 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x3 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (= x3 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (= x3 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x3 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x3 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x3 java.util.Date)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x3 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x3 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x3 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (= x3 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.ArrayList))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Point2D))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x3 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x3 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x3 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x3 java.text.Format))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.AbstractMap))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.filters.supervised.attribute.NominalToBinary))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.filters.supervised.attribute.NominalToBinary)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Environment))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Environment)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x3 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Enum))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.LinkedList))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.filters.unsupervised.attribute.Remove))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.filters.unsupervised.attribute.Remove)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.ObjectInputStream))
(check-sat)
(push)
(assert (le x4 java.io.ObjectInputStream))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.ObjectInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.ObjectInputStream)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (= x4 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.ArrayList))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (= x4 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.util.Date)))
(check-sat)
(push)
(assert (not (le x4 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x4 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x4 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (not (le x4 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (= x4 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (= x4 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.Format)))
(check-sat)
(push)
(assert (not (= x4 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x4 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x4 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x4 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x4 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.Format))
(check-sat)
(push)
(assert (not (le x4 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.NumberFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.classifiers.Evaluation))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.classifiers.Evaluation))
(check-sat)
(push)
(assert (le x3 weka.classifiers.Evaluation))
(check-sat)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.Evaluation)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.PrintStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.PrintStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (not (le x7 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.SerializedObject))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 java.io.ByteArrayInputStream))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.ByteArrayInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.ByteArrayInputStream)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.ByteArrayInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.ByteArrayInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.ByteArrayInputStream)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 java.io.ObjectInputStream))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 java.io.ObjectInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.ObjectInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.ObjectInputStream)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x4 weka.classifiers.trees.j48.C45Split))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.C45Split)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.classifiers.CostMatrix))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.CostMatrix)))
(check-sat)
(push)
(assert (le x7 weka.core.Environment))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Environment)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.AbstractMap))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (le x3 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.estimators.KernelEstimator)))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.REPTree))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.ClassifierTree))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.functions.LinearRegression)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.M5Base)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.rules.ZeroR)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.J48)))
(check-sat)
(push)
(assert (le x7 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.J48))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.rules.ZeroR))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.M5Base))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.Rule))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.REPTree))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.REPTree))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.ClassifierTree))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.functions.LinearRegression)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.M5Base)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.rules.ZeroR)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.J48)))
(check-sat)
(push)
(assert (le x7 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.J48))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.rules.ZeroR))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.M5Base))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.Rule))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.REPTree))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.REPTree)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (not (le x4 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.filters.supervised.attribute.NominalToBinary))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.filters.supervised.attribute.NominalToBinary)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.io.StreamTokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.StreamTokenizer)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Properties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.Evaluation))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.Evaluation)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.Evaluation))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.Evaluation)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.estimators.DiscreteEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.DiscreteEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Evaluation))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.filters.supervised.attribute.NominalToBinary))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.filters.supervised.attribute.NominalToBinary)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x4 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.PageAttributes))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.Insets))
(check-sat)
(push)
(assert (le x4 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x0 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x0 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x0 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x0 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (= x0 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x0 java.util.Date)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (not (= x0 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x0 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x0 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (= x0 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x0 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x0 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x0 java.text.Format)))
(check-sat)
(push)
(assert (not (le x0 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.PageFormat)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Enum))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x0 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.SingleIndex))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.SingleIndex)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.SingleIndex))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.SingleIndex)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Point2D))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 javax.swing.AbstractAction))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractMap))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.Format))
(check-sat)
(push)
(assert (not (le x0 java.text.NumberFormat)))
(check-sat)
(push)
(assert (not (le x0 java.text.DateFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.text.NumberFormat))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (le x4 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Hashtable)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.util.Hashtable))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.converters.AbstractLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.AbstractLoader)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.converters.ArffLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ArffLoader)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.ArrayList))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Class))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Class)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.experiment.Stats))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.experiment.Stats))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.experiment.Stats)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.experiment.Stats)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.experiment.Stats)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.experiment.Stats)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x0 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x2 javax.swing.AbstractAction))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x2 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.LinkedList))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.Matrix))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.classifiers.trees.m5.YongSplitInfo))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.classifiers.trees.m5.YongSplitInfo)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 weka.classifiers.trees.m5.YongSplitInfo))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.classifiers.trees.m5.YongSplitInfo)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.ByteArrayOutputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.ByteArrayOutputStream)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (= x2 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x2 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x2 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x2 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x2 java.text.Format)))
(check-sat)
(push)
(assert (not (le x2 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x2 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x2 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x2 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (= x2 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x2 java.util.Date)))
(check-sat)
(push)
(assert (not (le x2 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x2 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x2 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (= x2 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x2 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x2 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x2 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (= x2 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x2 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x2 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x2 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Dimension2D)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Point2D))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (= x4 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.AbstractAction))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x4 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.RectangularShape))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (= x4 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.util.Date)))
(check-sat)
(push)
(assert (not (le x4 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x4 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x4 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (not (le x4 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (= x4 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (= x4 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.Format)))
(check-sat)
(push)
(assert (not (= x4 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x4 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x4 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x4 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x4 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.io.ByteArrayOutputStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.ByteArrayOutputStream)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.text.Format))
(check-sat)
(push)
(assert (not (le x4 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.NumberFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Enum))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DateFormat))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x4 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (not (le x1 weka.estimators.NormalEstimator)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.NormalEstimator))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x7 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x7 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x7 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x7 java.text.Format))
(check-sat)
(push)
(assert (not (le x7 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x7 java.text.NumberFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.AbstractMap))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x7 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x7 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x7 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.LinkedList))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (= x7 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Hashtable))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x7 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x7 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x7 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x7 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x7 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x7 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x7 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x7 java.awt.print.Paper)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (not (le x7 java.lang.Enum)))
(check-sat)
(push)
(assert (not (= x7 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x7 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x7 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (= x7 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x7 java.text.Format)))
(check-sat)
(push)
(assert (not (le x7 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x7 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (= x7 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x7 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (= x7 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x7 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x7 java.util.Date)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.classifiers.trees.j48.InfoGainSplitCrit))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.classifiers.trees.j48.InfoGainSplitCrit)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.PrintStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.PrintStream)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Properties))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.Integer))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.C45Split))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.C45Split)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue)))
(check-sat)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x0 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x0 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x0 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x0 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (= x0 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x0 java.util.Date)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (not (= x0 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x0 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x0 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (= x0 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x0 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x0 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x0 java.text.Format)))
(check-sat)
(push)
(assert (not (le x0 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Enum))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x0 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DateFormat))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.print.PageFormat))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x0 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractMap))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.Format))
(check-sat)
(push)
(assert (not (le x0 java.text.NumberFormat)))
(check-sat)
(push)
(assert (not (le x0 java.text.DateFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.StreamTokenizer))
(check-sat)
(push)
(assert (le x3 java.io.StreamTokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.StreamTokenizer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.StreamTokenizer)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.StreamTokenizer))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.StreamTokenizer)))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.OptionHandler))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.OptionHandler)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x2 java.text.DateFormat))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.experiment.Stats)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.experiment.Stats)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.experiment.Stats))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.experiment.Stats)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (not (le x3 java.text.Format)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x3 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x3 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x3 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (= x3 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x3 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (= x3 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (= x3 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x3 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x3 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x3 java.util.Date)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x3 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x3 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x3 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (= x3 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x3 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x3 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x3 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x3 java.text.Format))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x3 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Hashtable))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x3 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.LinkedList))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.text.DateFormat))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.io.ObjectInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.ObjectInputStream)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x7 java.util.Properties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.Evaluation))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.RectangularShape))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.OptionHandler))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.OptionHandler)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (= x3 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x3 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x2 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x2 java.text.Format))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x2 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.classifiers.meta.ClassificationViaRegression))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.meta.ClassificationViaRegression)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.geom.Line2D))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Hashtable)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Enum))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.Reader))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.Reader)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.BufferedReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 java.io.ObjectOutputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.ObjectOutputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.text.NumberFormat))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x7 java.text.DateFormat))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x7 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x7 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x7 java.text.Format))
(check-sat)
(push)
(assert (not (le x7 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x7 java.text.NumberFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.RectangularShape))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.Date))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x7 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x7 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x7 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (= x7 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (= x7 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x7 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x7 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x7 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x7 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x7 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x7 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x7 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x7 java.awt.print.Paper)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (not (le x7 java.lang.Enum)))
(check-sat)
(push)
(assert (not (= x7 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x7 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x7 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (= x7 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x7 java.text.Format)))
(check-sat)
(push)
(assert (not (le x7 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x7 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (= x7 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x7 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (= x7 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x7 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x7 java.util.Date)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x7 java.awt.geom.RectangularShape)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (= x7 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x7 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.OptionHandler))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.OptionHandler)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Properties))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.classifiers.CostMatrix))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.CostMatrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.text.Format)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x3 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x3 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x3 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (= x3 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x3 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (= x3 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (= x3 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x3 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x3 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x3 java.util.Date)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x3 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x3 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x3 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (= x3 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.geom.RectangularShape))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x3 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x3 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x3 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x3 java.text.Format))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x3 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Hashtable))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.filters.unsupervised.attribute.Remove))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.filters.unsupervised.attribute.Remove)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x3 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Enum))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.LinkedList))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (= x3 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.functions.LinearRegression)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Evaluation))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Evaluation)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x4 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Range))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Range)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 weka.classifiers.trees.j48.InfoGainSplitCrit))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 weka.classifiers.trees.j48.InfoGainSplitCrit)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.converters.AbstractLoader))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.converters.AbstractLoader)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.filters.unsupervised.attribute.Remove))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.filters.unsupervised.attribute.Remove)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(push)
(assert (le x4 java.lang.ClassLoader))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.ClassLoader)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x5 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x0 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x0 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x0 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x0 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (= x0 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x0 java.util.Date)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (not (= x0 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x0 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x0 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (= x0 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x0 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x0 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x0 java.text.Format)))
(check-sat)
(push)
(assert (not (le x0 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.PageFormat)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x0 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.print.PageFormat))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Point2D))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.RectangularShape))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.Format))
(check-sat)
(push)
(assert (not (le x0 java.text.NumberFormat)))
(check-sat)
(push)
(assert (not (le x0 java.text.DateFormat)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x7 weka.classifiers.CostMatrix))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.classifiers.CostMatrix)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.experiment.Stats))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.experiment.Stats)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 weka.classifiers.trees.m5.Impurity))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x4 weka.classifiers.trees.m5.Impurity))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x4 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(push)
(assert (= x2 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.AbstractMap))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x2 java.text.NumberFormat))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x2 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (= x2 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.ArrayList))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x2 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x2 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (= x2 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x2 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x2 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x2 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x2 java.text.Format)))
(check-sat)
(push)
(assert (not (le x2 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x2 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x2 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x2 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (= x2 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x2 java.util.Date)))
(check-sat)
(push)
(assert (not (le x2 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x2 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x2 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x2 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (= x2 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x2 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x2 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x2 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (= x2 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x2 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x2 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x2 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x2 java.awt.geom.Dimension2D)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Point2D))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.HashSet))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x2 java.text.DateFormat))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x2 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x2 java.text.Format))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x2 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x2 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x2 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Enum))
(check-sat)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SerializedObject)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SerializedObject))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (not (le x5 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.SerializedObject))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.filters.unsupervised.attribute.Remove))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.filters.unsupervised.attribute.Remove)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.Integer))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Integer))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Integer)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.Class))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Class)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 java.io.ObjectOutputStream))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.io.ObjectOutputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.ObjectOutputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.ObjectOutputStream)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.filters.unsupervised.attribute.ReplaceMissingValues))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.filters.Filter))
(check-sat)
(push)
(assert (le x4 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.filters.Filter)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.filters.Filter)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.filters.unsupervised.attribute.ReplaceMissingValues)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.C45Split))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.C45Split)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x0 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x0 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x0 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x0 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (= x0 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x0 java.util.Date)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (not (= x0 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x0 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x0 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (= x0 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x0 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x0 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x0 java.text.Format)))
(check-sat)
(push)
(assert (not (le x0 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.PageFormat)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Enum))
(check-sat)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.NumberFormat))
(check-sat)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (le x3 java.util.Random))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Random)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x0 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.Format))
(check-sat)
(push)
(assert (not (le x0 java.text.NumberFormat)))
(check-sat)
(push)
(assert (not (le x0 java.text.DateFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.Reader))
(check-sat)
(push)
(assert (le x2 java.io.BufferedReader))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.BufferedReader)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.Reader)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.text.Format)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x3 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x3 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x3 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (= x3 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x3 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x3 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (= x3 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (= x3 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x3 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x3 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x3 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x3 java.util.Date)))
(check-sat)
(push)
(assert (not (le x3 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x3 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x3 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x3 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x3 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x3 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (= x3 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x3 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.ArrayList))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x3 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x3 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x3 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x3 java.text.Format))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.AbstractMap))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x3 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Hashtable))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (= x3 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x3 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.LinkedList))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x3 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (= x3 sun.java2d.SunGraphics2D))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (not (le x0 weka.core.SerializedObject)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (= x4 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Point2D))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x4 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (= x4 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.util.Date)))
(check-sat)
(push)
(assert (not (le x4 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x4 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x4 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (not (le x4 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (= x4 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (= x4 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.Format)))
(check-sat)
(push)
(assert (not (= x4 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x4 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x4 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x4 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x4 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x4 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x4 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x4 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x4 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x4 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x4 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x4 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.text.Format))
(check-sat)
(push)
(assert (not (le x4 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x4 java.text.NumberFormat)))
(check-sat)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.AbstractMap))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Enum))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x4 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.LinkedList))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x4 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x4 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.SerializedObject)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.Integer))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Integer)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.io.ByteArrayOutputStream))
(check-sat)
(push)
(assert (le x3 java.io.ByteArrayOutputStream))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.ByteArrayOutputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.ByteArrayOutputStream)))
(check-sat)
(push)
(assert (= x0 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x0 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x7 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.classifiers.functions.LinearRegression)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.converters.ArffLoader_currencysign_ArffReader))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.converters.ArffLoader_currencysign_ArffReader)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x4 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.NormalEstimator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.DiscreteEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.DiscreteEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.DiscreteEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.DiscreteEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.DiscreteEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.DiscreteEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.NormalEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.DiscreteEstimator))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.DiscreteEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.DiscreteEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.DiscreteEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.DiscreteEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.DiscreteEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x4 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x5 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 weka.filters.Filter))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.filters.Filter)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.classifiers.trees.m5.YongSplitInfo))
(check-sat)
(push)
(assert (= x4 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x4 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 weka.classifiers.trees.m5.YongSplitInfo)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.CapabilitiesHandler))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.CapabilitiesHandler)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.HashSet))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractMap))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 weka.classifiers.trees.m5.Impurity))
(check-sat)
(pop)
(push)
(assert (not (= x5 weka.classifiers.trees.m5.Impurity)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 weka.classifiers.trees.m5.YongSplitInfo))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.classifiers.trees.m5.YongSplitInfo)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.OptionHandler))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.OptionHandler)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 weka.classifiers.trees.m5.YongSplitInfo))
(check-sat)
(pop)
(push)
(assert (not (= x2 weka.classifiers.trees.m5.YongSplitInfo)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x2 java.io.ByteArrayInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.ByteArrayInputStream)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.SerializedObject)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SerializedObject))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (le x4 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.HashSet)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeStats))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeStats)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.classifiers.functions.LinearRegression))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.classifiers.functions.LinearRegression))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.classifiers.functions.LinearRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x7 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.HashSet)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(push)
(assert (= x7 weka.core.Capabilities_currencysign_Capability))
(check-sat)
(pop)
(push)
(assert (not (= x7 weka.core.Capabilities_currencysign_Capability)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.ProtectedProperties))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 weka.core.converters.AbstractFileLoader))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.converters.AbstractFileLoader)))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x0 weka.core.converters.ArffLoader))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.converters.ArffLoader)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (le x2 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.ProtectedProperties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.ProtectedProperties))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.ProtectedProperties)))
(check-sat)
(push)
(assert (le x3 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x7 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.Rule))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.Rule)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.Rule))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.Rule)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.Rule))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.Rule)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.io.ObjectInputStream))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.ObjectInputStream)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(push)
(assert (not (le x3 weka.core.SparseInstance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (le x3 java.io.ByteArrayInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.ByteArrayInputStream)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Double)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (not (le x7 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.SparseInstance))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Matrix)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (not (le x0 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Capabilities)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.converters.ConverterUtils_currencysign_DataSource))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.converters.ConverterUtils_currencysign_DataSource)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (= x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Double))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Double)))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Double)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Capabilities))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Capabilities)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x3 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x4 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.FastVector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.matrix.Matrix)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.io.PrintStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.PrintStream)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.PrintStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.PrintStream)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.PrintStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.PrintStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Class))
(check-sat)
(push)
(assert (= x7 java.lang.Class))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Class)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.Class)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Class))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Class)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeStats))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeStats)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Integer))
(check-sat)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Attribute)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x3 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x0 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x2 java.io.ObjectInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.ObjectInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(push)
(assert (le x2 weka.filters.unsupervised.attribute.ReplaceMissingValues))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.filters.unsupervised.attribute.ReplaceMissingValues)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x7 weka.classifiers.bayes.NaiveBayes))
(check-sat)
(push)
(assert (= x0 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Date))
(check-sat)
(pop)
(push)
(assert (= x0 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x0 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x0 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x0 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (= x0 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x0 java.util.Date)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (not (= x0 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x0 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (= x0 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (= x0 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x0 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x0 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x0 java.text.Format)))
(check-sat)
(push)
(assert (not (le x0 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.PageFormat)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Enum))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (= x0 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.PageFormat))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x0 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Point2D))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.geom.Path2D))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (= x0 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.RectangularShape))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.Format))
(check-sat)
(push)
(assert (not (le x0 java.text.NumberFormat)))
(check-sat)
(push)
(assert (not (le x0 java.text.DateFormat)))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.classifiers.bayes.NaiveBayes)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Properties)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Vector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.SerializedObject))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(push)
(assert (le x7 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instances)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x5 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x2 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (le x7 weka.core.FastVector))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.FastVector)))
(check-sat)
(push)
(assert (le x2 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.Properties)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x5 java.io.File))
(check-sat)
(push)
(assert (le x5 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(push)
(assert (= x4 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x3 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (= x3 java.lang.Double))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Double)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.SerializedObject)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.SerializedObject))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x4 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x7 weka.core.Instance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (le x5 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.datatransfer.DataFlavor))
(check-sat)
(push)
(assert (le x1 weka.estimators.KernelEstimator))
(check-sat)
(push)
(assert (not (le x2 weka.core.SparseInstance)))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 weka.core.Attribute))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.SparseInstance))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.FastVector))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(push)
(assert (le x3 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x6 weka.core.Queue))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x2 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x4 weka.core.Instance))
(check-sat)
(push)
(assert (= x0 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.Boolean)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x5 java.util.Date)))
(check-sat)
(push)
(assert (not (le x5 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x5 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x5 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x5 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x5 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x5 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x5 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x5 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (= x5 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x5 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x5 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x5 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x5 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x5 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x5 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x5 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x5 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x5 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (= x5 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x5 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (not (= x5 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (= x5 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x5 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x5 java.text.Format)))
(check-sat)
(push)
(assert (not (le x5 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x5 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x5 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x5 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x5 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x5 javax.swing.AbstractAction)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x5 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x5 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x5 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x5 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.text.DateFormat)))
(check-sat)
(push)
(assert (not (le x5 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x5 java.text.Format))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x5 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x5 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (= x5 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.ImageCapabilities))
(check-sat)
(pop)
(push)
(assert (= x5 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x5 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (= x5 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (= x5 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x5 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x5 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 weka.core.Queue)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.estimators.KernelEstimator)))
(check-sat)
(pop)
