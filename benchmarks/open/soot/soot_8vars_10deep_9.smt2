;symbolic execution tree
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (le x6 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.util.List))
(check-sat)
(push)
(assert (not (le x6 soot.coffi.Exception_attribute)))
(check-sat)
(pop)
(push)
(assert (le x6 soot.coffi.Exception_attribute))
(check-sat)
(push)
(assert (le x3 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.List)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 soot.Transform))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.Transform)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.lang.Object)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x7 soot.util.Numberable))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.Numberable)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.Type))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.Type)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_String_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_String_info)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.List))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x4 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.MethodSource)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.Type))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.Type)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.toolkits.scalar.LiveLocals))
(check-sat)
(push)
(assert (le x4 soot.toolkits.scalar.LiveLocals))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.toolkits.scalar.LiveLocals)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.toolkits.scalar.LiveLocals)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x7 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x7 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x3 soot.util.HashChain))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.InputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.InputStream)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.util.HashChain_currencysign_Link))
(check-sat)
(push)
(assert (le x0 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.Transform))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.Transform)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x0 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 soot.util.HashChain)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x4 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x4 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.MethodSource)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x4 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x4 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 soot.coffi.Exception_attribute))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.Exception_attribute)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.List))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.List)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.List)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.List)))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.Code_attribute)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.Code_attribute))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(push)
(assert (le x4 soot.coffi.Code_attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.Code_attribute)))
(check-sat)
(push)
(assert (not (le x0 soot.RefType)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.RefType))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(push)
(assert (not (le x3 soot.RefType)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 soot.RefType))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.coffi.SourceFile_attribute))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.SourceFile_attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.SourceFile_attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 soot.coffi.SourceFile_attribute)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x7 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.Code_attribute)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.Code_attribute))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 soot.coffi.Code_attribute))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.Code_attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x7 soot.coffi.method_info))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.coffi.method_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.coffi.method_info))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 soot.coffi.method_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 soot.SootField))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 soot.SootField)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x6 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(push)
(assert (le x0 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 soot.SourceLocator_currencysign_FoundFile))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 soot.SourceLocator_currencysign_FoundFile)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.SourceLocator_currencysign_FoundFile))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.SourceLocator_currencysign_FoundFile)))
(check-sat)
(push)
(assert (le x4 soot.SourceLocator_currencysign_FoundFile))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.SourceLocator_currencysign_FoundFile)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 soot.SourceLocator_currencysign_FoundFile))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.SourceLocator_currencysign_FoundFile)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 soot.MethodSource))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.MethodSource)))
(check-sat)
(push)
(assert (le x4 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.MethodSource)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x4 soot.Type))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.Type)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x6 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x6 soot.util.SmallNumberedMap))
(check-sat)
(pop)
(push)
(assert (not (= x6 soot.util.SmallNumberedMap)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (not (le x3 soot.shimple.internal.SPatchingChain)))
(check-sat)
(push)
(assert (le x3 soot.PatchingChain))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.jimple.parser.node.TypedLinkedList))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.jimple.parser.node.TypedLinkedList)))
(check-sat)
(push)
(assert (le x3 java.util.LinkedList))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.shimple.internal.SPatchingChain))
(check-sat)
(pop)
(push)
(assert (le x3 soot.util.HashChain))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x6 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x7 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.List)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.List)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.List))
(check-sat)
(push)
(assert (le x4 java.util.List))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.List)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.Type))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x4 soot.Type))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.Type)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 soot.Type)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x7 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x7 soot.coffi.Code_attribute))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.Code_attribute)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.List)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (not (le x1 soot.RefType)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.RefType))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.Code_attribute))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.Code_attribute)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.spark.sets.PointsToSetEqualsWrapper))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.toolkits.scalar.ArraySparseSet)))
(check-sat)
(push)
(assert (le x1 soot.toolkits.scalar.AbstractFlowSet))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 soot.jimple.spark.ondemand.genericutil.Stack))
(check-sat)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.AbstractCollection)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 soot.util.IdentityHashSet))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.util.HashChain)))
(check-sat)
(push)
(assert (not (le x1 soot.PatchingChain)))
(check-sat)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(push)
(assert (not (le x1 java.util.AbstractList)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.TreeSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.shimple.internal.SPatchingChain)))
(check-sat)
(push)
(assert (le x1 soot.PatchingChain))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.AbstractList))
(check-sat)
(push)
(assert (not (le x1 java.util.ArrayList)))
(check-sat)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 soot.shimple.internal.SPatchingChain))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.LinkedList))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.parser.node.TypedLinkedList)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.jimple.parser.node.TypedLinkedList))
(check-sat)
(pop)
(push)
(assert (le x1 soot.util.ArraySet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.spark.ondemand.genericutil.ArraySet))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.util.IterableSet)))
(check-sat)
(push)
(assert (le x1 soot.util.HashChain))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.util.IterableSet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.annotation.arraycheck.BoundedPriorityList))
(check-sat)
(pop)
(push)
(assert (le x1 polyglot.util.TypedList))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.AbstractCollection)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.AbstractCollection)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.spark.ondemand.genericutil.ImmutableStack))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Hashtable))
(check-sat)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.AbstractCollection)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.typing.fast.QueuedSet))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 polyglot.util.TypedList))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(push)
(assert (le x1 java.util.AbstractMap))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.TreeSet))
(check-sat)
(pop)
(push)
(assert (= x1 soot.coffi.BBQ))
(check-sat)
(pop)
(push)
(assert (le x1 soot.util.UnitMap))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.AbstractCollection)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.AbstractCollection)))
(check-sat)
(push)
(assert (le x1 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.LinkedList)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.LinkedList)))
(check-sat)
(push)
(assert (not (le x1 soot.shimple.internal.SPatchingChain)))
(check-sat)
(push)
(assert (le x1 soot.PatchingChain))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.util.HashChain))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.LinkedList))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.parser.node.TypedLinkedList)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.shimple.internal.SPatchingChain))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.parser.node.TypedLinkedList))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.util.HashMultiMap))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x1 java.util.AbstractCollection))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.AbstractCollection)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.BitSet))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.spark.ondemand.genericutil.ArraySet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.annotation.arraycheck.BoundedPriorityList))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.spark.ondemand.WrappedPointsToSet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.toolkits.scalar.ArraySparseSet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.pointer.MemoryEfficientRasUnion))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x6 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.DataInputStream)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_String_info))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_String_info)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x7 soot.SootField))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.SootField))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.SootField)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.SootField)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x1 soot.coffi.method_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.method_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 soot.coffi.SourceFile_attribute))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.SourceFile_attribute)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.util.HashChain_currencysign_Link))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x1 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.MethodSource)))
(check-sat)
(pop)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x6 soot.MethodSource))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 soot.MethodSource)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuilder))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.io.ByteArrayOutputStream))
(check-sat)
(push)
(assert (le x0 java.io.ByteArrayOutputStream))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.io.ByteArrayOutputStream))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.ByteArrayOutputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.ByteArrayOutputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.ByteArrayOutputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x2 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (not (le x4 soot.coffi.Exception_attribute)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 soot.coffi.Exception_attribute))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_String_info))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x2 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x2 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_String_info)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x2 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x2 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(push)
(assert (le x2 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x2 soot.MethodSource)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x7 soot.tagkit.Tag))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.tagkit.InnerClassTag)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.tagkit.InnerClassTag))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.tagkit.Tag)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x1 java.util.List))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.List)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x2 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x2 soot.MethodSource)))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.List))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.List)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Integer))
(check-sat)
(push)
(assert (le x2 soot.coffi.CONSTANT_Class_info))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x1 soot.coffi.Code_attribute))
(check-sat)
(push)
(assert (not (le x1 soot.coffi.Exception_attribute)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.Exception_attribute))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.Code_attribute)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x7 java.util.List))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 soot.util.HashChain_currencysign_Link))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 soot.util.HashChain_currencysign_Link)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x2 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x7 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (le x1 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x3 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x7 soot.MethodSource))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 soot.MethodSource)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
