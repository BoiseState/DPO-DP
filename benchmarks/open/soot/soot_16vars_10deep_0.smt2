;symbolic execution tree
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(push)
(assert (le x6 java.lang.Object))
(check-sat)
(push)
(assert (le x7 java.lang.Object))
(check-sat)
(push)
(assert (le x8 java.lang.Object))
(check-sat)
(push)
(assert (le x9 java.lang.Object))
(check-sat)
(push)
(assert (le x10 java.lang.Object))
(check-sat)
(push)
(assert (le x11 java.lang.Object))
(check-sat)
(push)
(assert (le x12 java.lang.Object))
(check-sat)
(push)
(assert (le x13 java.lang.Object))
(check-sat)
(push)
(assert (le x14 java.lang.Object))
(check-sat)
(push)
(assert (le x15 java.lang.Object))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(push)
(assert (le x10 java.io.File))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(push)
(assert (le x8 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.List)))
(check-sat)
(push)
(assert (le x5 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x8 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x7 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x14 soot.coffi.method_info))
(check-sat)
(pop)
(push)
(assert (not (le x14 soot.coffi.method_info)))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x10 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x10 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.shimple.internal.SHashMultiMap)))
(check-sat)
(push)
(assert (le x4 soot.util.HashMultiMap))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 soot.shimple.internal.SHashMultiMap))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(push)
(assert (le x10 java.io.File))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x2 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x12 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x12 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x12 soot.MethodSource)))
(check-sat)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x14 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x14 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x12 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x5 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x14 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x12 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x12 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(push)
(assert (le x9 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x2 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.List)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x13 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(push)
(assert (= x10 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (le x14 soot.Type))
(check-sat)
(pop)
(push)
(assert (not (le x14 soot.Type)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x8 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x5 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x8 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.io.File)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x8 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.io.File))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(push)
(assert (le x10 java.io.File))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x12 soot.MethodSource))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x12 soot.MethodSource)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x7 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.MethodSource)))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x7 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.MethodSource)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (le x6 java.io.File))
(check-sat)
(push)
(assert (le x10 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (le x7 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x7 soot.MethodSource)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(push)
(assert (le x9 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x7 soot.MethodSource))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 soot.MethodSource)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x9 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.lang.Object)))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x8 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x9 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x10 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.Code_attribute))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.Code_attribute)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x10 java.io.File))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(push)
(assert (le x4 soot.coffi.method_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.method_info)))
(check-sat)
(push)
(assert (= x6 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x13 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x10 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Fieldref_info)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (le x5 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Fieldref_info))
(check-sat)
(pop)
(push)
(assert (le x4 soot.coffi.Code_attribute))
(check-sat)
(push)
(assert (le x13 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x11 java.io.File))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x11 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 soot.coffi.Code_attribute)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x14 java.io.File))
(check-sat)
(push)
(assert (le x13 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x13 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x13 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x13 soot.MethodSource)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (le x13 soot.CoffiClassSource))
(check-sat)
(pop)
(push)
(assert (not (le x13 soot.CoffiClassSource)))
(check-sat)
(pop)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.util.List))
(check-sat)
(push)
(assert (le x8 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.util.List)))
(check-sat)
(push)
(assert (le x4 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.List)))
(check-sat)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (le x4 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x13 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x8 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x8 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x0 soot.Type))
(check-sat)
(pop)
(push)
(assert (not (le x0 soot.Type)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x14 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x13 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x8 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.StringBuilder)))
(check-sat)
(push)
(assert (le x14 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x4 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 soot.coffi.method_info))
(check-sat)
(push)
(assert (le x14 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 soot.coffi.method_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x9 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x9 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x9 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x12 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x8 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x7 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x12 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.List)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x10 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x9 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x11 java.io.File))
(check-sat)
(push)
(assert (= x12 java.lang.StringBuffer))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x10 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x9 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x11 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x12 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x11 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x10 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x14 soot.toolkits.scalar.FlowSet))
(check-sat)
(pop)
(push)
(assert (not (le x14 soot.toolkits.scalar.FlowSet)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x12 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x5 soot.util.HashChain_currencysign_Link))
(check-sat)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x0 soot.Value))
(check-sat)
(push)
(assert (le x5 soot.util.HashChain_currencysign_Link))
(check-sat)
(pop)
(push)
(assert (not (le x5 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 soot.Value)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x14 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x14 java.lang.String)))
(check-sat)
(push)
(assert (le x9 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x7 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x5 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x12 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (le x12 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.io.DataInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x10 soot.util.HashChain))
(check-sat)
(pop)
(push)
(assert (not (le x10 soot.shimple.internal.SPatchingChain)))
(check-sat)
(push)
(assert (le x10 soot.PatchingChain))
(check-sat)
(pop)
(pop)
(push)
(assert (le x10 soot.jimple.parser.node.TypedLinkedList))
(check-sat)
(push)
(assert (le x12 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x10 soot.jimple.parser.node.TypedLinkedList)))
(check-sat)
(push)
(assert (le x10 java.util.LinkedList))
(check-sat)
(pop)
(pop)
(push)
(assert (le x10 soot.shimple.internal.SPatchingChain))
(check-sat)
(pop)
(push)
(assert (le x12 java.io.DataInputStream))
(check-sat)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x12 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x12 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x2 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x12 java.lang.StringBuilder))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x12 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (le x5 java.util.Map_currencysign_Entry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.Map_currencysign_Entry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (not (le x2 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x2 soot.coffi.CONSTANT_Class_info))
(check-sat)
(push)
(assert (= x12 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x12 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (not (le x2 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x4 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x7 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x11 soot.tagkit.Tag))
(check-sat)
(pop)
(push)
(assert (not (le x11 soot.tagkit.Tag)))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x11 soot.tagkit.Tag))
(check-sat)
(pop)
(push)
(assert (not (le x11 soot.tagkit.Tag)))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (le x6 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_Methodref_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x12 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x13 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x13 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x6 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x9 java.io.File))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (le x14 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x9 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x9 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x14 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x14 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x9 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x6 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.io.File)))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x10 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x14 java.lang.Object))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x14 java.lang.Object)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x9 java.util.List))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.util.List)))
(check-sat)
(push)
(assert (le x5 java.io.File))
(check-sat)
(push)
(assert (le x5 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(pop)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x9 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.io.File)))
(check-sat)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x1 java.io.File))
(check-sat)
(push)
(assert (le x5 soot.coffi.method_info))
(check-sat)
(pop)
(push)
(assert (not (le x5 soot.coffi.method_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.io.File)))
(check-sat)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x10 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (= x10 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.StringBuilder)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (le x2 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x2 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(push)
(assert (= x13 soot.util.SmallNumberedMap))
(check-sat)
(pop)
(push)
(assert (not (= x13 soot.util.SmallNumberedMap)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Class_info))
(check-sat)
(push)
(assert (le x11 soot.MethodSource))
(check-sat)
(pop)
(push)
(assert (not (le x11 soot.MethodSource)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.coffi.method_info))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.coffi.method_info)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(push)
(assert (le x13 java.util.List))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x13 java.util.List)))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (le x0 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.io.File)))
(check-sat)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (le x10 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (le x2 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (le x4 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x11 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(push)
(assert (= x7 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(push)
(assert (le x5 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x5 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x8 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x7 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x6 java.io.DataInputStream))
(check-sat)
(push)
(assert (= x10 java.lang.String))
(check-sat)
(push)
(assert (= x0 java.lang.StringBuilder))
(check-sat)
(pop)
(push)
(assert (not (= x0 java.lang.StringBuilder)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x10 java.lang.String)))
(check-sat)
(push)
(assert (le x8 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x6 java.io.DataInputStream)))
(check-sat)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x10 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x10 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_NameAndType_info)))
(check-sat)
(push)
(assert (le x12 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_NameAndType_info))
(check-sat)
(pop)
(pop)
(push)
(assert (le x4 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x11 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x11 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x8 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(push)
(assert (le x10 java.io.File))
(check-sat)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(push)
(assert (= x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x6 java.lang.String)))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x11 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.io.File)))
(check-sat)
(push)
(assert (le x11 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x11 java.io.File)))
(check-sat)
(pop)
(push)
(assert (= x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x12 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(push)
(assert (le x10 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x10 java.io.File)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.io.DataInputStream)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(push)
(assert (le x13 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x13 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(push)
(assert (le x2 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (= x4 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x4 java.lang.String)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Class_info)))
(check-sat)
(pop)
(push)
(assert (le x3 soot.coffi.CONSTANT_Class_info))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(push)
(assert (= x13 java.lang.String))
(check-sat)
(push)
(assert (le x2 java.io.File))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.File)))
(check-sat)
(push)
(assert (le x4 java.io.File))
(check-sat)
(pop)
(push)
(assert (not (le x4 java.io.File)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x13 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(push)
(assert (le x15 soot.coffi.CONSTANT_Utf8_info))
(check-sat)
(pop)
(push)
(assert (not (le x15 soot.coffi.CONSTANT_Utf8_info)))
(check-sat)
(push)
(assert (= x5 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x5 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x13 java.io.DataInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.io.DataInputStream)))
(check-sat)
(push)
(assert (= x15 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x15 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x9 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 soot.coffi.CONSTANT_Methodref_info)))
(check-sat)
(pop)
