;symbolic execution tree
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (le x2 java.lang.Object))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (not (le x0 org.dom4j.tree.ContentListFacade)))
(check-sat)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x0 java.util.AbstractList))
(check-sat)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfIndirectReference))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfObject))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfIndirectReference)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (not (le x0 org.dom4j.tree.ContentListFacade)))
(check-sat)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x0 java.util.AbstractList))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.TreeSet))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.AbstractList)))
(check-sat)
(push)
(assert (le x0 java.util.AbstractCollection))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 com.lowagie.text.Cell))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Phrase))
(check-sat)
(pop)
(push)
(assert (not (le x0 org.dom4j.tree.BackedList)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Section)))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Phrase)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 org.dom4j.tree.ContentListFacade))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Section))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 org.dom4j.tree.BackedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfDictionary))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfDictionary)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfObject))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.ByteBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.ByteBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfObject))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.TreeSet))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (= x2 java.lang.reflect.Field))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.reflect.Field)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x2 com.lowagie.text.pdf.ByteBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.ByteBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x1 com.lowagie.text.pdf.ByteBuffer))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x1 com.lowagie.text.pdf.ByteBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x1 com.lowagie.text.pdf.ByteBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfObject))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfArray))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfArray)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 com.lowagie.text.pdf.ByteBuffer)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x1 com.lowagie.text.pdf.ByteBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x1 com.lowagie.text.pdf.ByteBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(push)
(assert (= x1 java.lang.Integer))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (not (le x0 org.dom4j.tree.ContentListFacade)))
(check-sat)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x0 java.util.AbstractList))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.TreeSet))
(check-sat)
(push)
(assert (= x1 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.AbstractList)))
(check-sat)
(push)
(assert (le x0 java.util.AbstractCollection))
(check-sat)
(push)
(assert (= x1 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 com.lowagie.text.Cell))
(check-sat)
(push)
(assert (= x1 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 com.lowagie.text.Phrase))
(check-sat)
(pop)
(push)
(assert (not (le x0 org.dom4j.tree.BackedList)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Section)))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Phrase)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 org.dom4j.tree.ContentListFacade))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Section))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 org.dom4j.tree.BackedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.AbstractList)))
(check-sat)
(push)
(assert (le x0 java.util.AbstractCollection))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 com.lowagie.text.Cell))
(check-sat)
(push)
(assert (le x1 com.lowagie.text.pdf.PdfName))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (= x3 java.lang.reflect.Field))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.reflect.Field)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(push)
(assert (le x2 com.lowagie.text.pdf.ByteBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.ByteBuffer)))
(check-sat)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfObject))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfObject))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.ByteBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.ByteBuffer)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfObject))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(push)
(assert (le x1 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x1 java.lang.StringBuffer)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.String))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.PdfName))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.PdfName)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(push)
(assert (= x3 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (= x3 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (= x2 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x2 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry))
(check-sat)
(push)
(assert (= x2 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (= x2 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry)))
(check-sat)
(pop)
(push)
(assert (= x1 java.lang.reflect.Method))
(check-sat)
(push)
(assert (le x2 java.lang.reflect.AccessibleObject))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.reflect.AccessibleObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (= x1 java.lang.reflect.Method)))
(check-sat)
(push)
(assert (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(push)
(assert (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry))
(check-sat)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry)))
(check-sat)
(pop)
(push)
(assert (le x2 com.lowagie.text.pdf.PdfIndirectObject))
(check-sat)
(pop)
(push)
(assert (not (le x2 com.lowagie.text.pdf.PdfIndirectObject)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 com.lowagie.text.pdf.IntHashtable_currencysign_Entry)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 com.lowagie.text.Phrase))
(check-sat)
(pop)
(push)
(assert (not (le x0 org.dom4j.tree.BackedList)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Section)))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Phrase)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 org.dom4j.tree.ContentListFacade))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Section))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 org.dom4j.tree.BackedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
