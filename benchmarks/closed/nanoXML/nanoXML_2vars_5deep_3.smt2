;symbolic execution tree
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 net.n3.nanoxml.XMLElement))
(check-sat)
(push)
(assert (le x0 net.n3.nanoxml.XMLElement))
(check-sat)
(pop)
(push)
(assert (not (le x0 net.n3.nanoxml.XMLElement)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 net.n3.nanoxml.XMLElement)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(push)
(assert (le x1 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Stack)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
