;symbolic execution tree
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(push)
(assert (le x0 java.util.Stack))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Stack)))
(check-sat)
(pop)
(pop)
(pop)
