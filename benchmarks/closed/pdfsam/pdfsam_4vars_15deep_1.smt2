;symbolic execution tree
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(push)
(assert (le x1 java.util.LinkedHashMap))
(check-sat)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(push)
(assert (le x3 java.lang.Integer))
(check-sat)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(push)
(assert (le x0 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (le x0 com.lowagie.text.pdf.PdfObject))
(check-sat)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 com.lowagie.text.pdf.PdfObject)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Integer))
(check-sat)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Integer)))
(check-sat)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(push)
(assert (le x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 java.lang.Integer)))
(check-sat)
(push)
(assert (le x3 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Integer)))
(check-sat)
(pop)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(push)
(assert (le x3 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Integer)))
(check-sat)
(push)
(assert (le x0 java.lang.Integer))
(check-sat)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(push)
(assert (le x2 java.io.FileInputStream))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Integer)))
(check-sat)
(push)
(assert (le x0 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Integer)))
(check-sat)
(push)
(assert (le x1 java.util.LinkedHashMap))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(push)
(assert (not (le x1 java.util.LinkedHashMap)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.security.Provider))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x1 java.lang.reflect.Field))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.WeakHashMap))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.IdentityHashMap))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(push)
(assert (not (le x1 java.util.TreeMap)))
(check-sat)
(push)
(assert (not (le x1 org.dom4j.tree.ConcurrentReaderHashMap)))
(check-sat)
(push)
(assert (not (le x1 java.util.IdentityHashMap)))
(check-sat)
(push)
(assert (le x1 java.util.AbstractMap))
(check-sat)
(push)
(assert (not (le x1 java.util.WeakHashMap)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 org.dom4j.tree.ConcurrentReaderHashMap))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.TreeMap))
(check-sat)
(pop)
(push)
(assert (le x1 java.awt.RenderingHints))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.TreeSet))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Cell))
(check-sat)
(pop)
(push)
(assert (le x0 org.dom4j.tree.ContentListFacade))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Phrase))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractList))
(check-sat)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (not (le x0 org.dom4j.tree.ContentListFacade)))
(check-sat)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x3 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Integer)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (le x3 java.lang.Integer))
(check-sat)
(pop)
(push)
(assert (not (le x3 java.lang.Integer)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 com.lowagie.text.Section)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (not (le x0 org.dom4j.tree.BackedList)))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Phrase)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 org.dom4j.tree.BackedList))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Section))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractCollection))
(check-sat)
(push)
(assert (not (le x0 java.util.AbstractList)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.TreeSet))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Cell))
(check-sat)
(pop)
(push)
(assert (le x0 org.dom4j.tree.ContentListFacade))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Phrase))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractList))
(check-sat)
(push)
(assert (not (le x0 java.util.ArrayList)))
(check-sat)
(push)
(assert (not (le x0 org.dom4j.tree.ContentListFacade)))
(check-sat)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 com.lowagie.text.Section)))
(check-sat)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(push)
(assert (not (le x0 org.dom4j.tree.BackedList)))
(check-sat)
(push)
(assert (not (le x0 com.lowagie.text.Phrase)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 org.dom4j.tree.BackedList))
(check-sat)
(pop)
(push)
(assert (le x0 com.lowagie.text.Section))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractCollection))
(check-sat)
(push)
(assert (not (le x0 java.util.AbstractList)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(push)
(assert (not (le x1 java.util.LinkedHashMap)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 java.security.Provider))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Hashtable)))
(check-sat)
(pop)
(push)
(assert (le x1 java.lang.reflect.Field))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.WeakHashMap))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.IdentityHashMap))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(push)
(assert (not (le x1 java.util.TreeMap)))
(check-sat)
(push)
(assert (not (le x1 org.dom4j.tree.ConcurrentReaderHashMap)))
(check-sat)
(push)
(assert (not (le x1 java.util.IdentityHashMap)))
(check-sat)
(push)
(assert (le x1 java.util.AbstractMap))
(check-sat)
(push)
(assert (not (le x1 java.util.WeakHashMap)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 org.dom4j.tree.ConcurrentReaderHashMap))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.TreeMap))
(check-sat)
(pop)
(push)
(assert (le x1 java.awt.RenderingHints))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x2 java.io.FileInputStream)))
(check-sat)
(pop)
