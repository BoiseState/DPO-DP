;symbolic execution tree
(push)
(assert (le x1 soot.util.HashChain_currencysign_Link))
(check-sat)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (le x1 soot.SootClass))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.SootClass)))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(push)
(assert (le x1 soot.Body))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JAssignStmt))
(check-sat)
(pop)
(push)
(assert (le x1 soot.AbstractUnit))
(check-sat)
(pop)
(push)
(assert (le x1 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.thread.synchronization.LocksetFlowInfo))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.Constant))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.Instruction))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractNewArrayExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractBinopExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.pointer.MemoryEfficientRasUnion))
(check-sat)
(pop)
(push)
(assert (le x1 soot.EquivalentValue))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JInvokeStmt))
(check-sat)
(pop)
(push)
(assert (le x1 soot.shimple.internal.SPhiExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.parser.node.Node))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.ParameterRef))
(check-sat)
(pop)
(push)
(assert (le x1 soot.util.queue.QueueReader))
(check-sat)
(pop)
(push)
(assert (le x1 soot.xml.XMLNode))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x1 soot.dava.toolkits.base.AST.structuredAnalysis.CPTuple))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.jimple.internal.JVirtualInvokeExpr)))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashMap)))
(check-sat)
(push)
(assert (le x1 java.util.AbstractMap))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.dava.internal.javaRep.DArrayInitExpr))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.jimple.internal.JSpecialInvokeExpr)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.JimpleBody))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.thread.synchronization.SynchronizedRegion))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.StaticFieldRef))
(check-sat)
(pop)
(push)
(assert (le x1 soot.util.BitVector))
(check-sat)
(pop)
(push)
(assert (le x1 soot.coffi.TypeStack))
(check-sat)
(pop)
(push)
(assert (le x1 soot.shimple.internal.SPiExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.spark.ondemand.genericutil.Stack))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JSpecialInvokeExpr))
(check-sat)
(pop)
(push)
(assert (le x1 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractNewExpr))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.JNewExpr)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JVirtualInvokeExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.JastAddJ.ASTNode))
(check-sat)
(push)
(assert (not (le x1 soot.JastAddJ.List)))
(check-sat)
(push)
(assert (not (le x1 soot.JastAddJ.Program)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x1 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractNewMultiArrayExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractInvokeExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.ThisRef))
(check-sat)
(pop)
(push)
(assert (le x1 soot.dava.internal.javaRep.DShortcutIf))
(check-sat)
(pop)
(push)
(assert (le x1 soot.shimple.toolkits.graph.ValueGraph_currencysign_TypeValueWrapper))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JInterfaceInvokeExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.thread.synchronization.SynchronizedRegionFlowPair))
(check-sat)
(pop)
(push)
(assert (le x1 java.lang.Object))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.JimpleLocal)))
(check-sat)
(push)
(assert (not (le x1 soot.util.queue.QueueReader)))
(check-sat)
(push)
(assert (not (le x1 soot.shimple.internal.SPhiExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.ParameterRef)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.parser.node.Node)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractBinopExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.EquivalentValue)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractNewArrayExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.coffi.Instruction)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.Constant)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.thread.synchronization.LocksetFlowInfo)))
(check-sat)
(push)
(assert (not (le x1 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.spark.ondemand.genericutil.Stack)))
(check-sat)
(push)
(assert (not (le x1 soot.shimple.internal.SPiExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.coffi.TypeStack)))
(check-sat)
(push)
(assert (not (le x1 soot.util.BitVector)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.StaticFieldRef)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.thread.synchronization.SynchronizedRegion)))
(check-sat)
(push)
(assert (not (le x1 soot.dava.internal.javaRep.DArrayInitExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.dava.toolkits.base.AST.structuredAnalysis.CPTuple)))
(check-sat)
(push)
(assert (not (le x1 soot.toolkits.graph.HashMutableEdgeLabelledDirectedGraph)))
(check-sat)
(push)
(assert (not (le x1 soot.toolkits.scalar.AbstractFlowSet)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.infoflow.CallChain)))
(check-sat)
(push)
(assert (not (le x1 soot.baf.internal.BafLocal)))
(check-sat)
(push)
(assert (not (le x1 soot.dava.internal.asg.AugmentedStmt)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractCastExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.toolkits.graph.HashMutableDirectedGraph)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractInstanceFieldRef)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractUnopExpr)))
(check-sat)
(push)
(assert (not (le x1 polyglot.util.TypedList)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractInstanceOfExpr)))
(check-sat)
(push)
(assert (not (le x1 java.util.BitSet)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.infoflow.AbstractDataSource)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.thread.synchronization.SynchronizedRegionFlowPair)))
(check-sat)
(push)
(assert (not (le x1 soot.dava.internal.javaRep.DShortcutIf)))
(check-sat)
(push)
(assert (not (le x1 soot.shimple.toolkits.graph.ValueGraph_currencysign_TypeValueWrapper)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.ThisRef)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractInvokeExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractNewExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.AbstractNewMultiArrayExpr)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.JCaughtExceptionRef)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.annotation.purity.PurityGraph)))
(check-sat)
(push)
(assert (not (le x1 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x1 soot.dava.internal.asg.AugmentedStmtGraph)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.thread.synchronization.NewStaticLock)))
(check-sat)
(push)
(assert (not (le x1 soot.AbstractTrap)))
(check-sat)
(push)
(assert (not (le x1 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x1 java.text.Format)))
(check-sat)
(push)
(assert (not (le x1 java.text.StringCharacterIterator)))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.internal.JArrayRef)))
(check-sat)
(push)
(assert (not (le x1 java.util.Date)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x1 soot.grimp.internal.GRValueBox))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JReturnVoidStmt))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.infoflow.AbstractDataSource))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractInstanceOfExpr))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.BitSet))
(check-sat)
(pop)
(push)
(assert (le x1 polyglot.util.TypedList))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JIdentityStmt))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x1 java.text.Format))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractUnopExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractInstanceFieldRef))
(check-sat)
(pop)
(push)
(assert (le x1 soot.toolkits.graph.HashMutableDirectedGraph))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.AbstractCastExpr))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x1 soot.dava.internal.asg.AugmentedStmt))
(check-sat)
(pop)
(push)
(assert (le x1 soot.baf.internal.BafLocal))
(check-sat)
(pop)
(push)
(assert (not (le x1 soot.jimple.internal.JInterfaceInvokeExpr)))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.infoflow.CallChain))
(check-sat)
(pop)
(push)
(assert (le x1 soot.toolkits.scalar.AbstractFlowSet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.toolkits.graph.HashMutableEdgeLabelledDirectedGraph))
(check-sat)
(pop)
(push)
(assert (le x1 soot.JastAddJ.Program))
(check-sat)
(pop)
(push)
(assert (le x1 soot.JastAddJ.List))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JArrayRef))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x1 java.text.StringCharacterIterator))
(check-sat)
(pop)
(push)
(assert (le x1 soot.toolkits.scalar.ValueUnitPair))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JimpleLocal))
(check-sat)
(push)
(assert (not (le x1 soot.jimple.toolkits.infoflow.FakeJimpleLocal)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.infoflow.FakeJimpleLocal))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JNewExpr))
(check-sat)
(pop)
(push)
(assert (le x1 soot.AbstractTrap))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.thread.synchronization.NewStaticLock))
(check-sat)
(pop)
(push)
(assert (le x1 soot.dava.internal.asg.AugmentedStmtGraph))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x1 soot.util.IterableSet))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.toolkits.annotation.purity.PurityGraph))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.TreeSet))
(check-sat)
(pop)
(push)
(assert (le x1 java.util.HashMap))
(check-sat)
(pop)
(push)
(assert (le x1 soot.jimple.internal.JCaughtExceptionRef))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x1 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 soot.util.HashChain_currencysign_Link)))
(check-sat)
(pop)
