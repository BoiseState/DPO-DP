;symbolic execution tree
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.meta.ClassificationViaRegression))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.meta.ClassificationViaRegression)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.J48))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.J48)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.meta.ClassificationViaRegression))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.meta.ClassificationViaRegression)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.meta.ClassificationViaRegression))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.meta.ClassificationViaRegression)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.UpdateableClassifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.UpdateableClassifier))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.meta.ClassificationViaRegression))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.meta.ClassificationViaRegression)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.rules.ZeroR))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.rules.ZeroR)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.meta.ClassificationViaRegression))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.meta.ClassificationViaRegression)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.bayes.NaiveBayes))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.bayes.NaiveBayes)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.bayes.NaiveBayes))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.bayes.NaiveBayes)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.bayes.NaiveBayes))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.bayes.NaiveBayes)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x0 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.Classifier)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
