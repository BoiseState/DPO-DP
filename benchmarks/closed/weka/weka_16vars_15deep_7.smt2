;symbolic execution tree
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x13 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x10 java.lang.String))
(check-sat)
(push)
(assert (le x8 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x11 weka.classifiers.Classifier))
(check-sat)
(pop)
(push)
(assert (not (le x11 weka.classifiers.Classifier)))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(push)
(assert (le x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x0 java.lang.String))
(check-sat)
(push)
(assert (le x1 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.String)))
(check-sat)
(push)
(assert (le x2 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x2 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x8 java.lang.String))
(check-sat)
(push)
(assert (le x12 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x8 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x13 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x14 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x14 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x13 java.lang.StringBuffer)))
(check-sat)
(pop)
(push)
(assert (le x9 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x9 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x1 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x11 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x11 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x15 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x15 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x6 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x6 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x14 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x14 weka.core.Instance)))
(check-sat)
(push)
(assert (le x11 weka.classifiers.trees.m5.RuleNode))
(check-sat)
(pop)
(push)
(assert (not (le x11 weka.classifiers.trees.m5.RuleNode)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x11 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x11 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(push)
(assert (le x1 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(push)
(assert (le x6 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x6 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x12 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x12 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x12 weka.core.Instance)))
(check-sat)
(pop)
(push)
(assert (le x12 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x14 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.geom.AffineTransform))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.print.Paper))
(check-sat)
(pop)
(push)
(assert (le x14 sun.java2d.loops.FontInfo))
(check-sat)
(push)
(assert (le x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x14 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x14 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x14 weka.core.matrix.DoubleVector))
(check-sat)
(push)
(assert (le x4 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x4 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x12 java.lang.String))
(check-sat)
(push)
(assert (le x11 weka.classifiers.trees.J48))
(check-sat)
(pop)
(push)
(assert (not (le x11 weka.classifiers.trees.J48)))
(check-sat)
(pop)
(push)
(assert (le x2 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (le x2 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x13 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x12 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x8 java.lang.String))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(push)
(assert (le x15 weka.core.Instance))
(check-sat)
(pop)
(push)
(assert (not (le x15 weka.core.Instance)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(push)
(assert (le x13 java.lang.StringBuffer))
(check-sat)
(push)
(assert (le x11 weka.classifiers.trees.m5.PreConstructedLinearModel))
(check-sat)
(pop)
(push)
(assert (not (le x11 weka.classifiers.trees.m5.PreConstructedLinearModel)))
(check-sat)
(push)
(assert (le x1 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.HashSet)))
(check-sat)
(pop)
(push)
(assert (le x7 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x12 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (le x12 java.lang.Boolean)))
(check-sat)
(pop)
(push)
(assert (le x13 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x13 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x13 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x8 java.lang.String)))
(check-sat)
(pop)
(push)
(assert (le x9 java.lang.Object))
(check-sat)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.Vector)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x9 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(push)
(assert (le x7 weka.core.Queue_currencysign_QueueNode))
(check-sat)
(push)
(assert (le x8 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x7 weka.core.Queue_currencysign_QueueNode)))
(check-sat)
(push)
(assert (le x1 java.util.Properties))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Properties)))
(check-sat)
(pop)
(push)
(assert (le x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x14 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x14 java.lang.Enum))
(check-sat)
(push)
(assert (le x0 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.AffineTransform))
(check-sat)
(push)
(assert (le x1 java.lang.Boolean))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.lang.Boolean)))
(check-sat)
(push)
(assert (le x3 weka.core.Instances))
(check-sat)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DateFormat))
(check-sat)
(push)
(assert (le x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.Paper))
(check-sat)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(push)
(assert (le x1 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (not (le x1 java.util.Vector)))
(check-sat)
(pop)
(push)
(assert (le x5 weka.core.AttributeLocator))
(check-sat)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.ImageCapabilities))
(check-sat)
(push)
(assert (le x7 java.lang.StringBuffer))
(check-sat)
(pop)
(push)
(assert (not (le x7 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 sun.java2d.SunGraphics2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.lang.Enum))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.Distribution))
(check-sat)
(push)
(assert (le x14 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.lang.Object)))
(check-sat)
(pop)
(push)
(assert (le x10 java.lang.String))
(check-sat)
(pop)
(push)
(assert (not (le x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Dimension2D))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (le x14 java.lang.Object))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x0 java.lang.Object)))
(check-sat)
(pop)
(pop)
(push)
(assert (le x0 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x0 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.text.NumberFormat)))
(check-sat)
(push)
(assert (le x0 java.text.Format))
(check-sat)
(push)
(assert (not (le x0 java.text.DateFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x0 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.matrix.DoubleVector))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.LinkedList))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.zip.ZipEntry))
(check-sat)
(pop)
(push)
(assert (le x0 java.awt.GridBagConstraints))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.Locale))
(check-sat)
(pop)
(push)
(assert (le x0 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (not (le x0 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x0 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x0 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (le x0 java.lang.Object))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x0 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x0 java.util.Date)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x0 java.text.Format)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x0 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x0 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x0 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x0 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x0 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x0 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x0 java.awt.RenderingHints)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x0 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x0 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x0 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x0 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x0 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x0 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x0 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x0 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x0 java.awt.geom.RectangularShape)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (le x0 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x0 weka.core.Capabilities))
(check-sat)
(pop)
(push)
(assert (le x0 sun.java2d.loops.FontInfo))
(check-sat)
(pop)
(push)
(assert (le x0 java.text.NumberFormat))
(check-sat)
(pop)
(pop)
(push)
(assert (le x14 weka.core.matrix.IntVector))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.HashSet))
(check-sat)
(pop)
(push)
(assert (le x14 javax.swing.tree.DefaultMutableTreeNode))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.font.TextLayout))
(check-sat)
(pop)
(push)
(assert (not (le x14 java.awt.datatransfer.DataFlavor)))
(check-sat)
(push)
(assert (not (le x14 java.awt.geom.Dimension2D)))
(check-sat)
(push)
(assert (not (le x14 java.awt.geom.Point2D)))
(check-sat)
(push)
(assert (not (le x14 java.text.DecimalFormatSymbols)))
(check-sat)
(push)
(assert (not (le x14 weka.core.matrix.Matrix)))
(check-sat)
(push)
(assert (not (le x14 java.awt.geom.RectangularShape)))
(check-sat)
(push)
(assert (not (le x14 java.awt.Insets)))
(check-sat)
(push)
(assert (not (le x14 java.awt.print.PageFormat)))
(check-sat)
(push)
(assert (not (le x14 javax.swing.AbstractAction)))
(check-sat)
(push)
(assert (not (le x14 java.awt.font.TextLayout)))
(check-sat)
(push)
(assert (not (le x14 javax.swing.tree.DefaultMutableTreeNode)))
(check-sat)
(push)
(assert (not (le x14 weka.core.matrix.IntVector)))
(check-sat)
(push)
(assert (not (le x14 java.lang.Enum)))
(check-sat)
(push)
(assert (not (le x14 java.util.zip.ZipEntry)))
(check-sat)
(push)
(assert (not (le x14 weka.core.matrix.DoubleVector)))
(check-sat)
(push)
(assert (not (le x14 java.awt.GridBagConstraints)))
(check-sat)
(push)
(assert (not (le x14 java.util.Locale)))
(check-sat)
(push)
(assert (not (le x14 sun.java2d.loops.FontInfo)))
(check-sat)
(push)
(assert (not (le x14 java.awt.geom.AffineTransform)))
(check-sat)
(push)
(assert (not (le x14 weka.core.Capabilities)))
(check-sat)
(push)
(assert (not (le x14 java.awt.print.Paper)))
(check-sat)
(push)
(assert (not (le x14 java.text.Format)))
(check-sat)
(push)
(assert (le x14 java.lang.Object))
(check-sat)
(push)
(assert (not (le x14 java.awt.ImageCapabilities)))
(check-sat)
(push)
(assert (not (le x14 java.awt.geom.Line2D)))
(check-sat)
(push)
(assert (not (le x14 java.awt.BufferCapabilities)))
(check-sat)
(push)
(assert (not (le x14 java.awt.PageAttributes)))
(check-sat)
(push)
(assert (not (le x14 java.awt.JobAttributes)))
(check-sat)
(push)
(assert (not (le x14 java.util.Date)))
(check-sat)
(push)
(assert (not (le x14 weka.classifiers.trees.j48.ClassifierSplitModel)))
(check-sat)
(push)
(assert (not (le x14 weka.core.Matrix)))
(check-sat)
(push)
(assert (not (le x14 java.util.AbstractMap)))
(check-sat)
(push)
(assert (not (le x14 java.awt.geom.Path2D)))
(check-sat)
(push)
(assert (not (le x14 weka.classifiers.trees.j48.Distribution)))
(check-sat)
(push)
(assert (not (le x14 java.awt.RenderingHints)))
(check-sat)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(pop)
(push)
(assert (not (le x14 java.text.DateFormat)))
(check-sat)
(push)
(assert (le x14 java.text.Format))
(check-sat)
(push)
(assert (not (le x14 java.text.NumberFormat)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (le x14 javax.swing.AbstractAction))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.print.PageFormat))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.ArrayList))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.Insets))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.geom.RectangularShape))
(check-sat)
(pop)
(push)
(assert (le x14 java.text.DecimalFormatSymbols))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.geom.Dimension2D))
(check-sat)
(pop)
(push)
(assert (le x14 weka.core.matrix.Matrix))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.geom.Point2D))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.datatransfer.DataFlavor))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.Vector))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.RenderingHints))
(check-sat)
(pop)
(push)
(assert (le x14 java.text.DateFormat))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.Hashtable))
(check-sat)
(pop)
(push)
(assert (le x14 weka.classifiers.trees.j48.Distribution))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.geom.Path2D))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.AbstractMap))
(check-sat)
(pop)
(push)
(assert (le x14 weka.core.Matrix))
(check-sat)
(pop)
(push)
(assert (le x14 java.text.NumberFormat))
(check-sat)
(pop)
(push)
(assert (le x14 weka.classifiers.trees.j48.ClassifierSplitModel))
(check-sat)
(pop)
(push)
(assert (le x14 java.util.Date))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.PageAttributes))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.JobAttributes))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.BufferCapabilities))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.geom.Line2D))
(check-sat)
(pop)
(push)
(assert (le x14 java.awt.ImageCapabilities))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x8 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x10 java.lang.String)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x5 weka.core.AttributeLocator)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x13 java.lang.StringBuffer)))
(check-sat)
(pop)
(pop)
(push)
(assert (not (le x3 weka.core.Instances)))
(check-sat)
(pop)
